@namespace("mosaic.interop.idl.amqp")
protocol Amqp {
	enum OperationNames {
		OPEN_CONNECTION, CLOSE_CONNECTION, 
		DECLARE_EXCHANGE, DECLARE_QUEUE, BIND_QUEUE, 
		CONSUME, PUBLISH, GET, ACK, CANCEL
	}
	
	enum ExchangeType {
		DIRECT, FANOUT, TOPIC
	}
	
	error AmqpError {
		string explanation;
	}
	
	record CompletionToken {
		string id;
		string client_id;
	}
	
	record OpenConnectionOperation {
	}
	
	record CloseConnectionOperation {
	}	
	
	record DeclareExchangeOperation {
		string exchange;
		ExchangeType type;
		boolean durable;
		boolean autodelete;
		boolean passive;
	}
	
	record DeclareQueueOperation {
		string queue;
		boolean exclusive;
		boolean durable;
		boolean autodelete;
		boolean passive;
	}
	
	record BindQueueOperation {
		string exchange;
		string queue;
		string routing_key;
	}
	
	record ConsumeOperation {
		string queue;
		string consumer;
		boolean exclusive;
		boolean autoack;
		bytes extra;
	}
	
	record PublishOperation {
		string callback;
		string content_encoding;
		string content_type;
		string correlation;
		bytes data;
		boolean durable;
		string exchange;
		string identifier;
		boolean immediate;
		boolean mandatory;
		string routingKey;
	}
	
	record GetOperation {
		string queue;
		boolean autoack;
	}
	
	record AckOperation {
		long delivery;
		boolean multiple;
	}
	
	record CancelOperation {
		string consumer;
	}
	
	record Operation {
		CompletionToken token;
		OperationNames name;
		union {OpenConnectionOperation, CloseConnectionOperation,
		DeclareExchangeOperation, DeclareQueueOperation, BindQueueOperation,
		ConsumeOperation, PublishOperation, GetOperation, AckOperation, CancelOperation} operation;
	}
	
	
	record OperationResponse {
		CompletionToken token;
		OperationNames name;
		boolean is_error;
		union {AmqpError, boolean, string} response;
	}
}