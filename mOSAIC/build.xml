<?xml version="1.0" encoding="UTF-8"?>

<project name="mOSAIC API build file" default="jar" basedir=".">
	<description>
		mOSAIC API build file
    </description>

	<!-- Define the environment variable -->
	<property environment="env" />

	<!-- 
    Properties in these files will override the properties defined in this file.
    -->
	<property file="build.properties" />

	<!-- Important directories and files -->
	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="test.output.dir" value="test-output" />
	<property name="lib.dir" value="lib" />

	<!-- Name of the JAR file that will be generated -->
	<property name="jar.all.name" value="mosaic.all.jar" />

	<!-- Build directories -->

	<!-- Auxiliary directory where all the intermediate files will be placed -->
	<property name="build.dir" location="build" />
	<property name="build.test.dir" location="build-tests" />


	<target name="init">
		<tstamp />
	</target>

	<target name="clean" depends="init" description="Delete the generated files">
		<delete dir="${build.dir}" failonerror="false" />
		<delete dir="${build.test.dir}" failonerror="false" />
		<delete dir="${test.output.dir}" failonerror="false" />
	</target>

	<target name="compile" depends="clean" description="Compiles the project">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" debug="yes" includeantruntime="true">
			<src path="${src.dir}/mosaic-core">
			</src>
			<src path="${src.dir}/mosaic-interop">
			</src>
			<src path="${src.dir}/mosaic-driver">
			</src>
			<src path="${src.dir}/mosaic-connector">
			</src>
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}/mosaic-core">
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${src.dir}/mosaic-interop">
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${src.dir}/mosaic-driver">
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${src.dir}/mosaic-connector">
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${src.dir}/mosaic-cloudlet">
				<include name="**/*.properties" />
			</fileset>
		</copy>
	</target>

	<target name="compile-all" depends="clean" description="Compiles the project">
		<mkdir dir="${build.test.dir}" />
		<javac destdir="${build.test.dir}" debug="yes" includeantruntime="true">
			<src path="${src.dir}/mosaic-core">
			</src>
			<src path="${src.dir}/mosaic-interop">
			</src>
			<src path="${src.dir}/mosaic-driver">
			</src>
			<src path="${src.dir}/mosaic-connector">
			</src>
			<src path="${src.dir}/mosaic-cloudlet">
			</src>
			<src path="${test.dir}">
			</src>
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
		<copy todir="${build.test.dir}">
			<fileset dir="${test.dir}">
				<exclude name="**/*.java" />
				<exclude name="**/*.prop" />
				<exclude name="resources" />
			</fileset>
			<fileset dir="${test.dir}/resources">
				<include name="*.prop" />
			</fileset>
			<fileset dir="${src.dir}/mosaic-core">
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${src.dir}/mosaic-interop">
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${src.dir}/mosaic-driver">
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${src.dir}/mosaic-connector">
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${src.dir}/mosaic-cloudlet">
				<include name="**/*.properties" />
			</fileset>
		</copy>
	</target>

	<target name="jar" depends="compile-all" description="Creates a JAR archive for the project">
		<jar destfile="${jar.all.name}" basedir="${build.test.dir}" />
	</target>

	<target name="config-tests">
		<mkdir dir="${test.output.dir}" />
		<junit>
			<test name="mosaic.core.configuration.tests.PropertyTypeConfigurationTest" outfile="tests-result">
			</test>
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir=".">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<formatter type="plain" />
		</junit>
	</target>

	<target name="driver-tests" description="Runs the driver tests. Assumes a membase store is running on localhost.">
		<mkdir dir="${test.output.dir}" />
		<junit>
			<batchtest fork="yes" todir="${test.output.dir}">
				<fileset dir="${test.dir}">
					<include name="mosaic/driver/**/*.java" />
				</fileset>
				<formatter type="plain" usefile="true" />
			</batchtest>
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir=".">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</junit>
	</target>

	<target name="conn-tests" description="Runs the connector tests. Assumes a membase store  and a RabbitMQ server is running on localhost.">
		<mkdir dir="${test.output.dir}" />
		<junit>
			<batchtest fork="yes" todir="${test.output.dir}">
				<fileset dir="${test.dir}">
					<include name="mosaic/connector/**/*.java" />
				</fileset>
				<formatter type="plain" usefile="true" />
			</batchtest>
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir=".">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</junit>
	</target>
	<!--
	<target name="cloudlet-tests" description="Runs the connector tests. Assumes a membase store  and a RabbitMQ server is running on localhost.">
			<mkdir dir="${test.output.dir}" />
			<junit>
				<batchtest fork="yes" todir="${test.output.dir}">
					<fileset dir="${test.dir}">
						<include name="mosaic/connector/**/*.java" />
					</fileset>
					<formatter type="plain" usefile="true" />
				</batchtest>
				<classpath>
					<fileset dir="lib">
						<include name="**/*.jar" />
					</fileset>
					<fileset dir=".">
						<include name="**/*.jar" />
					</fileset>
				</classpath>
			</junit>
		</target>
-->
	<target name="amqp-idl">
		<java jar="lib/avro-tools-1.5.0.jar" fork="true">
			<arg value="idl" />
			<arg value="protocol/amqp.avdl" />
			<arg value="protocol/amqp.avpr" />
			<classpath>
				<fileset dir="lib">
					<include name="avro-tools*.jar" />
					<include name="slf4j*.jar" />
				</fileset>
			</classpath>
		</java>
		<java jar="lib/avro-tools-gen.jar" fork="true">
			<arg value="compile" />
			<arg value="protocol" />
			<arg value="protocol/amqp.avpr" />
			<arg value="protocol/src" />
			<classpath>
				<fileset dir="lib">
					<include name="avro-tools-gen.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

</project>
