/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package mosaic.interop.idl.amqp;

@SuppressWarnings("all")
public class DeclareQueueOperation extends
		org.apache.avro.specific.SpecificRecordBase implements
		org.apache.avro.specific.SpecificRecord {
	public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema
			.parse("{\"type\":\"record\",\"name\":\"DeclareQueueOperation\",\"namespace\":\"mosaic.interop.idl.amqp\",\"fields\":[{\"name\":\"queue\",\"type\":\"string\"},{\"name\":\"exclusive\",\"type\":\"boolean\"},{\"name\":\"durable\",\"type\":\"boolean\"},{\"name\":\"autodelete\",\"type\":\"boolean\"},{\"name\":\"passive\",\"type\":\"boolean\"}]}");
	public java.lang.CharSequence queue;
	public boolean exclusive;
	public boolean durable;
	public boolean autodelete;
	public boolean passive;

	public org.apache.avro.Schema getSchema() {
		return SCHEMA$;
	}

	// Used by DatumWriter. Applications should not call.
	public java.lang.Object get(int field$) {
		switch (field$) {
		case 0:
			return queue;
		case 1:
			return exclusive;
		case 2:
			return durable;
		case 3:
			return autodelete;
		case 4:
			return passive;
		default:
			throw new org.apache.avro.AvroRuntimeException("Bad index");
		}
	}

	// Used by DatumReader. Applications should not call.
	@SuppressWarnings(value = "unchecked")
	public void put(int field$, java.lang.Object value$) {
		switch (field$) {
		case 0:
			queue = (java.lang.CharSequence) value$;
			break;
		case 1:
			exclusive = (java.lang.Boolean) value$;
			break;
		case 2:
			durable = (java.lang.Boolean) value$;
			break;
		case 3:
			autodelete = (java.lang.Boolean) value$;
			break;
		case 4:
			passive = (java.lang.Boolean) value$;
			break;
		default:
			throw new org.apache.avro.AvroRuntimeException("Bad index");
		}
	}
}
