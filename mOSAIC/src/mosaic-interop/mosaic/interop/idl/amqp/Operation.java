/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package mosaic.interop.idl.amqp;

@SuppressWarnings("all")
public class Operation extends org.apache.avro.specific.SpecificRecordBase
		implements org.apache.avro.specific.SpecificRecord {
	public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema
			.parse("{\"type\":\"record\",\"name\":\"Operation\",\"namespace\":\"mosaic.interop.idl.amqp\",\"fields\":[{\"name\":\"token\",\"type\":{\"type\":\"record\",\"name\":\"CompletionToken\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"client_id\",\"type\":\"string\"}]}},{\"name\":\"name\",\"type\":{\"type\":\"enum\",\"name\":\"OperationNames\",\"symbols\":[\"OPEN_CONNECTION\",\"CLOSE_CONNECTION\",\"DECLARE_EXCHANGE\",\"DECLARE_QUEUE\",\"BIND_QUEUE\",\"CONSUME\",\"PUBLISH\",\"GET\",\"ACK\",\"CANCEL\"]}},{\"name\":\"operation\",\"type\":[{\"type\":\"record\",\"name\":\"OpenConnectionOperation\",\"fields\":[]},{\"type\":\"record\",\"name\":\"CloseConnectionOperation\",\"fields\":[]},{\"type\":\"record\",\"name\":\"DeclareExchangeOperation\",\"fields\":[{\"name\":\"exchange\",\"type\":\"string\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"ExchangeType\",\"symbols\":[\"DIRECT\",\"FANOUT\",\"TOPIC\"]}},{\"name\":\"durable\",\"type\":\"boolean\"},{\"name\":\"autodelete\",\"type\":\"boolean\"},{\"name\":\"passive\",\"type\":\"boolean\"}]},{\"type\":\"record\",\"name\":\"DeclareQueueOperation\",\"fields\":[{\"name\":\"queue\",\"type\":\"string\"},{\"name\":\"exclusive\",\"type\":\"boolean\"},{\"name\":\"durable\",\"type\":\"boolean\"},{\"name\":\"autodelete\",\"type\":\"boolean\"},{\"name\":\"passive\",\"type\":\"boolean\"}]},{\"type\":\"record\",\"name\":\"BindQueueOperation\",\"fields\":[{\"name\":\"exchange\",\"type\":\"string\"},{\"name\":\"queue\",\"type\":\"string\"},{\"name\":\"routing_key\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"ConsumeOperation\",\"fields\":[{\"name\":\"queue\",\"type\":\"string\"},{\"name\":\"consumer\",\"type\":\"string\"},{\"name\":\"exclusive\",\"type\":\"boolean\"},{\"name\":\"autoack\",\"type\":\"boolean\"},{\"name\":\"extra\",\"type\":\"bytes\"}]},{\"type\":\"record\",\"name\":\"PublishOperation\",\"fields\":[{\"name\":\"callback\",\"type\":\"string\"},{\"name\":\"content_encoding\",\"type\":\"string\"},{\"name\":\"content_type\",\"type\":\"string\"},{\"name\":\"correlation\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"durable\",\"type\":\"boolean\"},{\"name\":\"exchange\",\"type\":\"string\"},{\"name\":\"identifier\",\"type\":\"string\"},{\"name\":\"immediate\",\"type\":\"boolean\"},{\"name\":\"mandatory\",\"type\":\"boolean\"},{\"name\":\"routingKey\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"GetOperation\",\"fields\":[{\"name\":\"queue\",\"type\":\"string\"},{\"name\":\"autoack\",\"type\":\"boolean\"}]},{\"type\":\"record\",\"name\":\"AckOperation\",\"fields\":[{\"name\":\"delivery\",\"type\":\"long\"},{\"name\":\"multiple\",\"type\":\"boolean\"}]},{\"type\":\"record\",\"name\":\"CancelOperation\",\"fields\":[{\"name\":\"consumer\",\"type\":\"string\"}]}]}]}");
	public mosaic.interop.idl.amqp.CompletionToken token;
	public mosaic.interop.idl.amqp.OperationNames name;
	public java.lang.Object operation;

	public org.apache.avro.Schema getSchema() {
		return SCHEMA$;
	}

	// Used by DatumWriter. Applications should not call.
	public java.lang.Object get(int field$) {
		switch (field$) {
		case 0:
			return token;
		case 1:
			return name;
		case 2:
			return operation;
		default:
			throw new org.apache.avro.AvroRuntimeException("Bad index");
		}
	}

	// Used by DatumReader. Applications should not call.
	@SuppressWarnings(value = "unchecked")
	public void put(int field$, java.lang.Object value$) {
		switch (field$) {
		case 0:
			token = (mosaic.interop.idl.amqp.CompletionToken) value$;
			break;
		case 1:
			name = (mosaic.interop.idl.amqp.OperationNames) value$;
			break;
		case 2:
			operation = (java.lang.Object) value$;
			break;
		default:
			throw new org.apache.avro.AvroRuntimeException("Bad index");
		}
	}
}
